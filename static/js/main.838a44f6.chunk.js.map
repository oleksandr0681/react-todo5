{"version":3,"sources":["components/filter-panel/filter-panel.module.scss","components/todo-list/todo-item/todo-item.module.scss","components/app-title/index.js","components/app-title/app-title.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/filter-panel/index.js","components/filter-panel/filter-panel.js","components/todo-list/todo-item/index.js","components/todo-list/todo-item/todo-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/add-item/index.js","components/add-item/add-item.js","components/app/img/react.png","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","AppTitle","className","SearchPanel","state","text","onTextChange","event","setState","target","value","onSearchClick","props","onSearch","type","onChange","this","placeholder","onClick","Component","FilterPanel","all","todo","important","setAll","onFilter","setTodo","setImportant","allClasses","classes","filterPanel__button","todoClasses","importantClasses","filterPanel__button_clicked","filterPanel","TodoItem","done","delete","item","itemDone","onDoneChange","id","onImportantChange","onDelItem","itemClasses","todoItem","todoItemDone","todoItemImportant","todoItemDelete","todoItem__buttonGreen","todoItem__buttonRed","todoItem__content","TodoList","todos","onChangeDone","onChangeImportant","console","log","todosEl","map","key","checked","AddItem","onSubmitFunction","preventDefault","onAddItem","action","onSubmit","App","todoList","searchText","filterParameter","delItem","index","findIndex","slice","addItem","itemId","newTodoList","maxId","length","i","push","changeDone","changeImportant","search","newSearchText","todoFilter","filterText","todoListSearched","todoListShow","filter","result","includes","src","alt","logo","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.838a44f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterPanel\":\"filter-panel_filterPanel__3Cehd\",\"filterPanel__button\":\"filter-panel_filterPanel__button__2754X\",\"filterPanel__button_clicked\":\"filter-panel_filterPanel__button_clicked__2xU08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoItem\":\"todo-item_todoItem__dOybJ\",\"todoItemDone\":\"todo-item_todoItemDone__1VDUG\",\"todoItemImportant\":\"todo-item_todoItemImportant__1Az1t\",\"todoItemDelete\":\"todo-item_todoItemDelete__2vidn\",\"todoItem__content\":\"todo-item_todoItem__content__2Qp3L\",\"todoItem__buttonGreen\":\"todo-item_todoItem__buttonGreen__1v3dx\",\"todoItem__buttonRed\":\"todo-item_todoItem__buttonRed__1BYG_\"};","import AppTitle from './app-title';\r\nexport default AppTitle;\r\n","import React from 'react';\r\n\r\n//css\r\nimport './app-title.css';\r\n\r\nconst AppTitle = () => {\r\n    const title = 'ToDo App';\r\n    return <h1 className=\"appTitle\">{ title }</h1>;\r\n  }\r\n  \r\n// export default означает что экспортируем только одну сущность.\r\nexport default AppTitle;\r\n","import SearchPanel from './search-panel';\r\nexport default SearchPanel;\r\n","import React, { Component } from 'react';\r\n\r\n// css\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n  state = {\r\n    text: ''\r\n  }\r\n\r\n  onTextChange = (event) => {\r\n      // console.log(event.target.value);\r\n      \r\n      this.setState({\r\n          text: event.target.value\r\n      });\r\n  }\r\n\r\n  onSearchClick = () => {\r\n    this.props.onSearch(this.state.text);\r\n    // this.setState({\r\n    //   text: ''\r\n    // });\r\n  }\r\n\r\n  render() {\r\n    const searchTitle = 'To do:';\r\n  return (\r\n    <div className=\"search-panel\">\r\n      <p className=\"search-panel__title\" >{searchTitle}</p>\r\n      <input \r\n        type=\"text\" \r\n        onChange={this.onTextChange}                 \r\n        value={this.state.text} \r\n        placeholder=\"search...\" \r\n        className=\"search-panel__input\" \r\n      />\r\n      <button \r\n        // onClick={() => {this.props.onSearch(this.state.text)}} \r\n        onClick={this.onSearchClick} \r\n        className=\"search-panel__button\"\r\n      >\r\n        ПОИСК\r\n      </button>\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\n// В данном случае в return должна быть обёртка <div></div>.\r\n// const SearchPanel = () => {\r\n//   const searchTitle = 'To do:';\r\n//   return (\r\n//     <div className=\"search-panel\">\r\n//       <p className=\"search-panel__title\" >{searchTitle}</p>\r\n//       <input type=\"text\" placeholder=\"search...\" className=\"search-panel__input\" />\r\n//       <button className=\"search-panel__button\">ПОИСК</button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default означает что экспортируем только одну сущность.\r\n// export default SearchPanel;\r\n","import FilterPanel from './filter-panel';\r\nexport default FilterPanel;\r\n","import React, { Component } from 'react';\r\n\r\n// Модульная стилизация.\r\nimport classes from './filter-panel.module.scss';\r\n\r\n// export default означает что экспортируем только одну сущность.\r\nexport default class FilterPanel extends Component {\r\n    state = {\r\n        all: true, \r\n        todo: false, \r\n        important: false\r\n    }\r\n\r\n    setAll = () => {\r\n        // console.log(this);\r\n        this.setState(() => {\r\n            return {\r\n                all: true, \r\n                todo: false, \r\n                important: false\r\n            }\r\n        });\r\n        \r\n        this.props.onFilter('all');\r\n    }\r\n\r\n    setTodo = () => {\r\n        this.setState(() => {\r\n            return {\r\n                all: false, \r\n                todo: true, \r\n                important: false\r\n            }\r\n        });\r\n\r\n        this.props.onFilter('todo');\r\n    }\r\n\r\n    setImportant = () => {\r\n        this.setState(() => {\r\n            return {\r\n                all: false, \r\n                todo: false, \r\n                important: true\r\n            }\r\n        });\r\n\r\n        this.props.onFilter('important');\r\n    }\r\n\r\n    render() {\r\n        let allClasses = classes.filterPanel__button, \r\n            todoClasses = classes.filterPanel__button, \r\n            importantClasses = classes.filterPanel__button;\r\n\r\n        if (this.state.all) {\r\n            allClasses += ` ${classes.filterPanel__button_clicked}`;\r\n        }\r\n\r\n        if (this.state.todo) {\r\n            todoClasses += ` ${classes.filterPanel__button_clicked}`;\r\n        }\r\n\r\n        if (this.state.important) {\r\n            importantClasses += ` ${classes.filterPanel__button_clicked}`;\r\n        }\r\n\r\n        return(\r\n            <div className={classes.filterPanel}>\r\n                <button onClick={this.setAll} className={allClasses}>all</button>\r\n                <button onClick={this.setTodo} className={todoClasses}>todo</button>\r\n                <button onClick={this.setImportant} className={importantClasses}>important</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import TodoItem from './todo-item';\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\r\n\r\n// css\r\n// import './todo-item.module.css';\r\n// Модульная стилизация.\r\nimport classes from './todo-item.module.scss';\r\n\r\nexport default class TodoItem extends Component {\r\n    state = {\r\n        // done: false, \r\n        // important: false, \r\n        done: this.props.done, \r\n        important: this.props.important, \r\n        delete: false, \r\n        item: this.props.item\r\n    }\r\n\r\n    itemDone = () => {\r\n        // console.log(this);\r\n        this.setState((state) => {\r\n            return {\r\n                done: !state.done\r\n                \r\n            }\r\n        });\r\n\r\n        // Я не знаю почему без ! функция возвращает не то значение. \r\n        // Может потому что функция возвращает значение до того как setState изменит значение.\r\n        // this.props.onDoneChange(this.props.item.id, !this.state.done);\r\n\r\n        // Возвращаю состояние, противоположное тому, которое получено в props.\r\n        this.props.onDoneChange(this.props.item.id, !this.props.done);\r\n    }\r\n\r\n    setImportant = () => {\r\n        // console.log('Important click');\r\n        // Первый вариант изменения state.\r\n        // this.setState((important) => {\r\n        //     return {                \r\n        //         important: !important\r\n        //     }\r\n        // });\r\n        // Второй вариант изменения state.\r\n        this.setState((state) => {\r\n            return {                \r\n                important: !state.important\r\n            }\r\n        });\r\n\r\n        // Возвращаю состояние, противоположное тому, которое получено в props.\r\n        this.props.onImportantChange(this.props.item.id, !this.props.important);\r\n    }\r\n\r\n    // delItem = () => {\r\n    //     this.setState((state) => {\r\n    //         return {\r\n    //             delete: !state.delete\r\n    //         }\r\n    //     });\r\n    // }\r\n    \r\n    render() {\r\n        // https://uk.reactjs.org/docs/react-dom.html#render\r\n        // https://uk.reactjs.org/docs/react-component.html#props\r\n        // Props представляет коллекцию значений, которые ассоциированы с компонентом.\r\n        // https://metanit.com/web/react/2.3.php\r\n\r\n        const {text, onDelItem} = this.props;\r\n\r\n        // console.log(classes)\r\n        // const styleLi = {\r\n        //     textDecoration: checked ? 'line-through' : ''\r\n        // };\r\n        \r\n        let itemClasses = classes.todoItem;\r\n\r\n        if (this.state.done) {\r\n            itemClasses += ` ${classes.todoItemDone}`;\r\n        }\r\n\r\n        if (this.state.important) {\r\n            itemClasses += ` ${classes.todoItemImportant}`\r\n        }\r\n\r\n        if (this.state.delete) {\r\n            \r\n            itemClasses += ` ${classes.todoItemDelete}`\r\n        }\r\n        \r\n        // Для второго варианта.\r\n        const {todoItem__buttonGreen, todoItem__buttonRed} = classes;\r\n    \r\n        return (\r\n            // <li onClick={this.itemDone} className={classes.todoItem  + ' ' + classes.todoItemDone}>\r\n            <li className={itemClasses}>\r\n                <div className={classes.todoItem__content}>\r\n                    <span onClick={this.itemDone}>{text}</span>\r\n                    <div>\r\n                        {/* Первый вариант. */}\r\n                        {/* <button className={classes.todoItem__buttonGreen}>i</button>\r\n                        <button className={classes.todoItem__buttonRed}>del</button> */}\r\n                        {/* Второй вариант. */}\r\n                        <button onClick={this.setImportant} className={todoItem__buttonGreen}>i</button>\r\n                        {/* <button onClick={this.delItem} className={todoItem__buttonRed}>del</button> */}\r\n                        <button onClick={onDelItem} className={todoItem__buttonRed}>del</button>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","import TodoList from './todo-list';\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport TodoItem from './todo-item';\r\n\r\n// css\r\nimport './todo-list.css';\r\n\r\n// const TodoList = (props) => {\r\nconst TodoList = ({todos, onDelItem, onChangeDone, onChangeImportant}) => {\r\n  // console.log(props);\r\n  // console.log(props.todos[0].text);\r\n  console.log(onDelItem);\r\n  const todosEl = todos.map((item) => {\r\n    return <TodoItem \r\n      key={item.id} \r\n      text={item.text} \r\n      checked={item.checked} \r\n      done={item.done}\r\n      important={item.important}\r\n      item={item}\r\n      onDoneChange={onChangeDone}\r\n      onImportantChange={onChangeImportant}\r\n      // onDelItem={() => {console.log('del item', item.id)}}\r\n      // onDelItem={()=>{item.onDelItem(item.id)}}\r\n      onDelItem={()=>{onDelItem(item.id)}}\r\n    />\r\n  });\r\n\r\n  return (\r\n    <ul className=\"todo-list\">\r\n      {/* <TodoItem text={todos[0].text} />\r\n      <TodoItem text={todos[1].text} />\r\n      <TodoItem text={todos[2].text} /> */}\r\n      {todosEl}\r\n    </ul>\r\n  );\r\n}\r\n\r\n// export default означает что экспортируем только одну сущность.\r\nexport default TodoList;\r\n","import AddItem from './add-item';\r\nexport default AddItem;\r\n","import React, { Component } from 'react';\r\n\r\n// css\r\nimport './add-item.css';\r\n\r\n// export default означает что экспортируем только одну сущность.\r\nexport default class AddItem extends Component {\r\n\r\n    state = {\r\n        text: ''\r\n    }\r\n\r\n    onTextChange = (event) => {\r\n        console.log(event.target.value);\r\n        \r\n        this.setState({\r\n            text: event.target.value\r\n        });\r\n    }\r\n\r\n    onSubmitFunction = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAddItem(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // https://uk.reactjs.org/docs/react-dom.html#render\r\n        // https://uk.reactjs.org/docs/react-component.html#props\r\n        // Props представляет коллекцию значений, которые ассоциированы с компонентом.\r\n        // https://metanit.com/web/react/2.3.php\r\n\r\n\r\n        const taskTitle = 'Task';\r\n        const {onAddItem} = this.props;\r\n\r\n        const text = this.state.text;\r\n        \r\n        return(\r\n            <form action=\"#\" onSubmit={this.onSubmitFunction}>\r\n                <div className=\"addItem\">\r\n                    <div className=\"addItem__title\">\r\n                        {taskTitle}\r\n                    </div>\r\n                    <input \r\n                        type=\"text\" \r\n                        onChange={this.onTextChange} \r\n                        value={this.state.text}\r\n                        placeholder=\"What do you need to do?\" \r\n                        className=\"addItem__input\" \r\n                    />\r\n                </div>\r\n                <div className=\"addItem__buttonDiv\">\r\n                    {/* Первый вариант onAddItem */}\r\n                    {/* <button onClick={ () => this.props.onAddItem(text) } className=\"addItem__button\">Add</button> */}\r\n                    {/* Второй вариант onAddItem */}\r\n                    {/* <button onClick={ () => onAddItem(text) } className=\"addItem__button\">Add</button> */}\r\n                    <button type=\"submit\" className=\"addItem__button\">Save Item</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/react.887f90e5.png\";","import App from './app';\r\nexport default App;\r\n","import React, { Component } from 'react';\r\n\r\n// components import\r\nimport AppTitle from './../app-title';\r\nimport SearchPanel from './../search-panel';\r\nimport FilterPanel from './../filter-panel';\r\nimport TodoList from './../todo-list';\r\nimport AddItem from './../add-item';\r\nimport Task from './../task';\r\nimport Save from './../save';\r\n\r\n// css\r\nimport './app.css';\r\n\r\n// img\r\nimport logo from './img/react.png';\r\n\r\n// export default означает что экспортируем только одну сущность.\r\nexport default class App extends Component {\r\n\r\n  // Объект state описывает внутреннее состояние компонента\r\n  // https://metanit.com/web/react/2.4.php\r\n  state = {\r\n    todoList: [\r\n      {id: 1, text: 'Wake up', done: true, important: false}, \r\n      {id: 2, text: 'Eat breakfast', done: false, important: false},\r\n      {id: 3, text: 'Go to work', done: false, important: false}\r\n    ], \r\n    searchText: '', \r\n    filterParameter: 'all'\r\n  }\r\n\r\n  delItem = (id) => {\r\n    // console.log(id);\r\n    \r\n    // Первый вариант срелочной функции.\r\n    // const index = this.state.todoList.findIndex((item) => {\r\n    //   if (id === item.id) {\r\n    //     return true;\r\n    //   }\r\n    //   else {\r\n    //     return false;\r\n    //   }\r\n    // });\r\n\r\n    // Второй вариант срелочной функции.\r\n    // const index = this.state.todoList.findIndex( (item) => id === item.id );\r\n\r\n    // console.log(index);\r\n\r\n    // Первый вариант setState.\r\n    // this.setState((state) => {\r\n    //   const index = this.state.todoList.findIndex( (item) => id === item.id );\r\n    // });\r\n\r\n    // Второй вариант setState.\r\n    this.setState(({todoList}) => {\r\n      const index = todoList.findIndex( (item) => id === item.id );\r\n      // todoList.splice(index, 1);\r\n\r\n      // Первый вариант\r\n      // const before = todoList.slice(0, index);\r\n      // const after = todoList.slice(index + 1);\r\n      // const newTodoList = before.concat(after);\r\n\r\n      // Второй вариант\r\n      const newTodoList = [\r\n        ...todoList.slice(0, index), \r\n        ...todoList.slice(index + 1)\r\n      ];\r\n\r\n      return {\r\n        todoList: newTodoList\r\n      }\r\n    });\r\n  }\r\n\r\n  addItem = (text) => {\r\n    console.log(text);\r\n\r\n    // Первый вариант setState.\r\n    this.setState((state) => {\r\n      // Копия массива.\r\n      const newTodoList = state.todoList.slice();\r\n      // Добавление нового элемента в массив.\r\n      let maxId = -1;\r\n      let itemId;\r\n      if (newTodoList.length > 0) {\r\n        maxId = newTodoList[0].id;\r\n      }\r\n      for (let i = 0; i < newTodoList.length; i++) {\r\n        if (newTodoList[i].id > maxId) {\r\n          maxId = newTodoList[i].id;\r\n        }\r\n      }\r\n      // Если массив пустой.\r\n      if (maxId === -1) {\r\n        itemId = 1;\r\n      }\r\n      // Если массив не пустой.\r\n      else {\r\n        itemId = maxId + 1;\r\n      }\r\n      // newTodoList.push({id: itemId, text: text, checked: false});\r\n      newTodoList.push({id: itemId, text: text, done: false, important: false});\r\n      // console.log(itemId, newTodoList);\r\n\r\n      return {\r\n        todoList: newTodoList\r\n      }\r\n    });\r\n\r\n    // Второй вариант setState.\r\n    // this.setState(({todoList}) => {\r\n    //   // Копия массива.\r\n    //   const newTodoList = todoList.slice();\r\n    //   // Добавление нового элемента в массив.\r\n    //   let maxId = -1;\r\n    //   let itemId;\r\n    //   if (newTodoList.length > 0) {\r\n    //     maxId = newTodoList[0].id;\r\n    //   }\r\n    //   for (let i = 0; i < newTodoList.length; i++) {\r\n    //     if (newTodoList[i].id > maxId) {\r\n    //       maxId = newTodoList[i].id;\r\n    //     }\r\n    //   }\r\n    //   // Если массив пустой.\r\n    //   if (maxId === -1) {\r\n    //     itemId = 1;\r\n    //   }\r\n    //   // Если массив не пустой.\r\n    //   else {\r\n    //     itemId = maxId + 1;\r\n    //   }\r\n    //   newTodoList.push({id: itemId, text: 'Added item', checked: true});\r\n    //   console.log(itemId, newTodoList);\r\n\r\n    //   return {\r\n    //     todoList: newTodoList\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  changeDone = (id, done) => {\r\n    console.log('id=' + id + ' done=' + done);\r\n    this.setState((state) => {\r\n      // Копия массива.\r\n      const newTodoList = state.todoList.slice();\r\n      // Добавление нового элемента в массив.\r\n      const index = newTodoList.findIndex( (item) => id === item.id );\r\n      newTodoList[index].done = done;\r\n      console.log(newTodoList[index]);\r\n      return {\r\n        todoList: newTodoList\r\n      }\r\n    });\r\n  }\r\n\r\n  changeImportant = (id, important) => {\r\n    // console.log('id=' + id + ' important=' + important);\r\n    this.setState((state) => {\r\n      // Копия массива.\r\n      const newTodoList = state.todoList.slice();\r\n      // Добавление нового элемента в массив.\r\n      const index = newTodoList.findIndex( (item) => id === item.id );\r\n      newTodoList[index].important = important;\r\n      console.log(newTodoList[index]);\r\n      return {\r\n        todoList: newTodoList\r\n      }\r\n    });\r\n  }\r\n\r\n  search = (newSearchText) => {\r\n    console.log(newSearchText);\r\n\r\n    this.setState({\r\n      searchText: newSearchText\r\n    });\r\n  }\r\n\r\n  todoFilter = (filterText) => {\r\n    console.log(filterText);\r\n\r\n    this.setState({\r\n      filterParameter: filterText\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let todoListSearched;\r\n    let todoListShow;\r\n    // Если текст поиска пустой.\r\n    if(this.state.searchText === '') {\r\n      // Глубокое копирование массива.\r\n      // https://metanit.com/web/javascript/5.3.php\r\n      todoListSearched = this.state.todoList.slice();\r\n    }\r\n    // Если текст поиска не пустой.\r\n    else {\r\n      // https://www.digitalocean.com/community/tutorials/js-array-find-method\r\n      // https://metanit.com/web/javascript/5.3.php\r\n      // https://developer.mozilla.org/uk/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\r\n      todoListSearched = this.state.todoList.filter((item) => {\r\n        let result = false;\r\n        // https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/String/includes\r\n        if (item.text.includes(this.state.searchText)) {\r\n          result = true;\r\n        }\r\n        return result;\r\n      });\r\n    }\r\n\r\n    // Если выбрано all.\r\n    if (this.state.filterParameter === 'all') {\r\n      todoListShow = todoListSearched;\r\n    }\r\n    // Если выбрано todo или important.\r\n    else {\r\n      todoListShow = todoListSearched.filter((item) => {\r\n        let result = false;\r\n        // Фильтрация не выполненных элементов.\r\n        if (this.state.filterParameter === 'todo') {\r\n          if (item.done === false) {\r\n            result = true;\r\n          }\r\n        }\r\n        // Фильтрация важных элементов.\r\n        if (this.state.filterParameter === 'important') {\r\n          if (item.important === true) {\r\n            result = true;\r\n          }\r\n        }\r\n        return result;\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <div>\r\n          <img src=\"img/react.png\" alt=\"react\" className=\"picture\" />\r\n          <AppTitle />\r\n          <SearchPanel onSearch={this.search} />\r\n          <FilterPanel onFilter={this.todoFilter} />\r\n          {/* <TodoList todos={this.state.todoList} onDelItem={this.delItem} /> */}\r\n          <TodoList \r\n            todos={todoListShow} \r\n            onDelItem={this.delItem} \r\n            onChangeDone={this.changeDone} \r\n            onChangeImportant={this.changeImportant} \r\n          />\r\n          <AddItem onAddItem={this.addItem} />\r\n          {/* <Task /> */}\r\n          {/* <Save /> */}\r\n          {/* Картинка из компонента */}\r\n          <img src={logo} alt=\"react\" className=\"picture\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// components import\nimport App from './components/app';\n\n\nReactDOM.render(\n  <App />, \n  document.querySelector('#root')\n);\n"],"sourceRoot":""}